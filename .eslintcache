[{"C:\\Users\\User\\Desktop\\react-share-app\\src\\App.js":"1","C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Singin.js":"2","C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Singup.js":"3","C:\\Users\\User\\Desktop\\react-share-app\\src\\components\\Navbar.js":"4","C:\\Users\\User\\Desktop\\react-share-app\\src\\firebase\\index.js":"5","C:\\Users\\User\\Desktop\\react-share-app\\src\\index.js":"6","C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Home.js":"7","C:\\Users\\User\\Desktop\\react-share-app\\src\\Router.js":"8","C:\\Users\\User\\Desktop\\react-share-app\\src\\context\\AuthContext.js":"9","C:\\Users\\User\\Desktop\\react-share-app\\src\\components\\Card.js":"10","C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\UserDetail.js":"11","C:\\Users\\User\\Desktop\\react-share-app\\src\\helpers\\api.js":"12"},{"size":733,"mtime":1606582910582,"results":"13","hashOfConfig":"14"},{"size":5156,"mtime":1606415348396,"results":"15","hashOfConfig":"14"},{"size":6439,"mtime":1606579397313,"results":"16","hashOfConfig":"14"},{"size":8190,"mtime":1606584185695,"results":"17","hashOfConfig":"14"},{"size":2162,"mtime":1606424563906,"results":"18","hashOfConfig":"14"},{"size":219,"mtime":1606242491855,"results":"19","hashOfConfig":"14"},{"size":1978,"mtime":1606585296198,"results":"20","hashOfConfig":"14"},{"size":960,"mtime":1606585112298,"results":"21","hashOfConfig":"14"},{"size":829,"mtime":1606421670363,"results":"22","hashOfConfig":"14"},{"size":1954,"mtime":1606587764555,"results":"23","hashOfConfig":"14"},{"size":600,"mtime":1606588249339,"results":"24","hashOfConfig":"14"},{"size":313,"mtime":1606587690001,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"ejyscn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\react-share-app\\src\\App.js",["58","59","60","61"],"import { useEffect, useState, useContext } from \"react\";\nimport \"./App.css\";\n\nimport { auth, db, storage } from \"./firebase\";\nimport { Router, Auth } from \"./Router\";\n\nimport AuthContextProvider, {\n  firebaseAuthContext,\n} from \"./context/AuthContext\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auth connect\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // console.log(authUser);\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user]);\n  return (\n    <AuthContextProvider>{user ? <Router /> : <Auth />}</AuthContextProvider>\n  );\n}\n\nexport default App;\n",["62","63"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Singin.js",["64","65","66","67"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Formik } from \"formik\";\r\nimport { useFormik } from \"formik\";\r\nimport { auth, db, storage } from \"../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    borderRadius: theme.spacing(8),\r\n    // backgroundColor: \"tomato\",\r\n  },\r\n  input: {\r\n    borderRadius: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.displayName) {\r\n    errors.displayName = \"Required\";\r\n  } else if (values.displayName.length > 15) {\r\n    errors.displayName = \"Must be 15 characters or less\";\r\n  }\r\n\r\n  //    if (!values.lastName) {\r\n  //      errors.lastName = \"Required\";\r\n  //    } else if (values.lastName.length > 20) {\r\n  //      errors.lastName = \"Must be 20 characters or less\";\r\n  //    }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default function SignIn({ setAuth }) {\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      displayName: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  const singIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(formik.values.email, formik.values.password)\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} className={classes.input}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.input}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to .\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={singIn}\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={() => setAuth(\"SINGUP\")}\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot Password\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n",["68","69"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Singup.js",["70","71","72"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { auth, db, storage } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    borderRadius: theme.spacing(8),\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"tomato\",\r\n  },\r\n  input: {\r\n    borderRadius: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  displayName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\nexport default function SignUp({ setAuth }) {\r\n  const [errMsg, setErrMsg] = useState(null);\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      displayName: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  const singUp = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        formik.values.email,\r\n        formik.values.password\r\n      )\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: formik.values.displayName,\r\n        });\r\n      })\r\n      .catch((err) => setErrMsg(err.message));\r\n  };\r\n\r\n  const useGoogleProvider = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    googleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n    auth.signInWithPopup(googleProvider);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                autoComplete=\"dname\"\r\n                fullWidth\r\n                name=\"displayName\"\r\n                variant=\"outlined\"\r\n                required\r\n                id=\"displayName\"\r\n                label=\"Display Name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.displayName}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.input}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.input}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n              />\r\n            </Grid>\r\n            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : null}\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={singUp}\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} justify=\"center\" alignItems=\"center\">\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={() => setAuth(\"LOGIN\")}\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                size=\"small\"\r\n                onClick={useGoogleProvider}\r\n                fullWidth\r\n              >\r\n                Google\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\react-share-app\\src\\components\\Navbar.js",["73","74","75"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\firebase\\index.js",[],["76","77"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\index.js",[],"C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\Home.js",["78"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Card from \"../components/Card\";\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"2rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = stylesFunc();\r\n  const [userList, setUserList] = useState();\r\n  const { REACT_APP_BASE_URL, REACT_APP_API_TOKEN } = process.env;\r\n\r\n  const fectchData = async () => {\r\n    const response = await axios.get(`${REACT_APP_BASE_URL}user`, {\r\n      headers: {\r\n        \"app-id\": REACT_APP_API_TOKEN,\r\n      },\r\n    });\r\n\r\n    setUserList(response.data.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // axios\r\n    //   .get(`${REACT_APP_BASE_URL}user`, {\r\n    //     headers: {\r\n    //       \"app-id\": REACT_APP_API_TOKEN,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => setUserList(res?.data?.data));\r\n    fectchData();\r\n  }, []);\r\n\r\n  console.log(userList);\r\n  return (\r\n    <Container className={classes.wrapper}>\r\n      <Grid container spacing={2} justify-content=\"space-between\">\r\n        {userList?.map((user) => {\r\n          /* \r\n        email: \"heinz-georg.fiedler@example.com\"\r\n        firstName: \"Heinz-Georg\"\r\n        id: \"0F8JIqi4zwvb77FGz6Wt\"\r\n        lastName: \"Fiedler\"\r\n        picture: \"https://randomuser.me/api/portraits/men/81.jpg\"\r\n        title:\r\n */\r\n          return (\r\n            <Grid key={user.id} item xs={3}>\r\n              <Card\r\n                userImage={user.picture}\r\n                userName={user.firstName}\r\n                userEmail={user.email}\r\n                userId={user.id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["79","80"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\Router.js",[],"C:\\Users\\User\\Desktop\\react-share-app\\src\\context\\AuthContext.js",[],"C:\\Users\\User\\Desktop\\react-share-app\\src\\components\\Card.js",["81","82"],"C:\\Users\\User\\Desktop\\react-share-app\\src\\pages\\UserDetail.js",[],"C:\\Users\\User\\Desktop\\react-share-app\\src\\helpers\\api.js",[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":31,"nodeType":"85","messageId":"86","endLine":1,"endColumn":41},{"ruleId":"83","severity":1,"message":"87","line":4,"column":16,"nodeType":"85","messageId":"86","endLine":4,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":4,"column":20,"nodeType":"85","messageId":"86","endLine":4,"endColumn":27},{"ruleId":"83","severity":1,"message":"89","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":22},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"83","severity":1,"message":"94","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":13},{"ruleId":"83","severity":1,"message":"95","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":16},{"ruleId":"83","severity":1,"message":"87","line":17,"column":16,"nodeType":"85","messageId":"86","endLine":17,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":17,"column":20,"nodeType":"85","messageId":"86","endLine":17,"endColumn":27},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","replacedBy":"97"},{"ruleId":"83","severity":1,"message":"87","line":17,"column":16,"nodeType":"85","messageId":"86","endLine":17,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":17,"column":20,"nodeType":"85","messageId":"86","endLine":17,"endColumn":27},{"ruleId":"83","severity":1,"message":"98","line":46,"column":7,"nodeType":"85","messageId":"86","endLine":46,"endColumn":19},{"ruleId":"83","severity":1,"message":"87","line":18,"column":16,"nodeType":"85","messageId":"86","endLine":18,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":18,"column":20,"nodeType":"85","messageId":"86","endLine":18,"endColumn":27},{"ruleId":"83","severity":1,"message":"99","line":85,"column":7,"nodeType":"85","messageId":"86","endLine":85,"endColumn":18},{"ruleId":"90","replacedBy":"100"},{"ruleId":"92","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":42,"column":6,"nodeType":"104","endLine":42,"endColumn":8,"suggestions":"105"},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"83","severity":1,"message":"108","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"109","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'storage' is defined but never used.","'firebaseAuthContext' is defined but never used.","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'Alert' is defined but never used.","'Formik' is defined but never used.",["110"],["111"],"'SignupSchema' is assigned a value but never used.","'displayName' is assigned a value but never used.",["110"],["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fectchData'. Either include it or remove the dependency array.","ArrayExpression",["112"],["110"],["111"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [fectchData]",{"range":"115","text":"116"},[1152,1154],"[fectchData]"]